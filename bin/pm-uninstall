#!perl

use strict;
use warnings;
use File::Spec;
use Getopt::Long qw/GetOptions/;
use Pod::Usage qw/pod2usage/;

our $VERSION = 0.01;

my $opt = +{};
GetOptions(
    'v|verbose!' => \$opt->{verbose},
    'd|dry-run!' => \$opt->{dry_run},
    'h|help!'    => \$opt->{help},
);
my @modules = map { my $org = $_; s|::|/|g; [$org, $_] } @ARGV;
pod2usage 1 if $opt->{help} or scalar @modules <= 0;

print "--- dry-run ---\n" if $opt->{dry_run};

for my $module (@modules) {
    my $module_name = $module->[0];
    my $module_path = $module->[1];

    print "Uninstalling $module_name\n";

    my $is_installed;
    for my $lib (@INC) {
        my $packlist = File::Spec->catfile("$lib/auto/$module_path/.packlist"); 
        if (-f $packlist) {
            $is_installed = 1;
            open my $fh, '<', $packlist or die "$packlist: $!";
            while (<$fh>) {
                chomp;
                print -f $_ ? 'unlink   ' : 'not found', " : $_\n" if $opt->{verbose};
                unlink $_ or warn "$_: $!\n" unless $opt->{dry_run};
            }
            close $fh;
            unlink $packlist or warn "$packlist: $!\n" unless $opt->{dry_run};
            last;
        }
    }
    warn "$module_name not installed or .packlist not found\n" unless $is_installed;
    print "Successfully $module_name\n" if $is_installed;
}

__END__

=head1 NAME

    pm-uninstall [options] Module ...

=head1 SYNOPSIS

    -v,--verbose    Truns on chatty output
    -d,--dry-run    Rehearsal
    -h,--help       This help message

